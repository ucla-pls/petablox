# Taint flow analysis

# Author: Joe Cox (cox@cs.ucla.edu)
# name=taintflow-dlog

.include "F.dom"
.include "I.dom"
.include "M.dom"
.include "V.dom"
.include "X.dom"
.include "Z.dom"

.bddvarorder I0xM0_X0xX1_Z0_V0_F0

###
# Relations
###

MXVarAsgnInst(m:M0,x1:X0,x2:X1) input
MputInstFldInstX(m:M0,v:V0,f:F0,x:X0) input
MputStatFldInstX(m:M0,f:F0,x:X0) input
MgetInstFldInstX(m:M0,x:X0,v:V0,f:F0) input
MgetStatFldInstX(m:M0,x:X0,f:F0) input
IinvkXArg(i:I0,z:Z0,x:X0) input
IinvkXRet(i:I0,z:Z0,x:X0) input
MmethXArg(m:M0,z:Z0,x:X0) input
IM(i:I0,m:M0) input
thisMV(m:M0,v:V0) input
XV(x:X0,v:V0) input
MX(m:M0,x:X0) input

taintSrc(m:M0) input

MputFldInstX(f:F0,x:X0) output
MgetFldInstX(x:X0,f:F0) output
untaintedX(x:X0) output
taintedX(x:X0) output
untaintedF(f:F0) output
taintedF(f:F0) output
# tracked(m:M0) output

###
# Constraints
###

# Assignment: x = y;
taintedX(x) :- taintedX(y), MXVarAsgnInst(_,x,y).
untaintedX(x) :- untaintedX(y), MXVarAsgnInst(_,x,y).

# Helpers
MputFldInstX(f,x) :- MputInstFldInstX(_,_,f,x).
MputFldInstX(f,x) :- MputStatFldInstX(_,f,x).
MgetFldInstX(x,f) :- MgetInstFldInstX(_,x,_,f).
MgetFldInstX(x,f) :- MgetStatFldInstX(_,x,f).

# Assignment: b.f = x
taintedF(f) :- MputFldInstX(f,x), taintedX(x).
untaintedF(f) :- MputFldInstX(f,x), untaintedX(x).

# Assignment: x = b.f
taintedX(x) :- MgetFldInstX(x,f), taintedF(f).
untaintedX(x) :- MgetFldInstX(x,f), untaintedF(f).

# Assignment: b.f = c.f
# ...

# Passing taint as an argument
taintedX(x) :- MmethXArg(m,z,x), IM(i,m), IinvkXArg(i,z,y), taintedX(y).
untaintedX(x) :- MmethXArg(m,z,x), IM(i,m), IinvkXArg(i,z,y), untaintedX(y).

# "this" of caller is tainted if callee object is tainted
taintedX(x) :- thisMV(m,v), XV(x,v), IM(i,m), IinvkXArg(i,0,y), taintedX(y).
untaintedX(x) :- thisMV(m,v), XV(x,v), IM(i,m), IinvkXArg(i,0,y), untaintedX(y).

# Return from tainted src
taintedX(x) :- taintSrc(m), IinvkXRet(i,_,x), IM(i,m).

# Rules for tracking methods
tracked(m) :- MX(m,x), taintedX(x), untaintedX(x).
