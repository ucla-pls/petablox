<?xml version="1.0" encoding="UTF-8"?>
<project name="STAMP-Apk">

  <target name="-prepare-backend-chord">
    <!-- Register backend-specific analyses. -->
    <property name="stamp.analyses.main"
	      value="typefilter-dlog,pt-dlog,taint-lim-dlog"/>
    <!-- Register backend-specific system properties (none required for this
         backend). -->
    <propertyset id="stamp.analyses.main.sysprops"/>
  </target>


  <target name="-analyze-apk">
	<!-- Run android-apktool to decompile the manifest and resource xml files -->
	<run-apktool/>	
  <echo> apktool done </echo>
    <!-- Generate harness. -->
    <java classname="petablox.android.harnessgen.Main"
	  maxmemory="${stamp.maxheap}"
	  fork="true"
	  failonerror="true">
      <jvmarg value="-ea"/>
      <classpath>
    		<pathelement location="${stamp.dir}/lib/apktool-cli-1.5.3-SNAPSHOT.jar"/>
    		<pathelement location="${stamp.dir}/lib/soot.jar"/>
        <pathelement location="${petablox.dir}/petablox.jar"/>
      </classpath>
      <arg value="${driver.dir}"/>
      <arg value="${apk}"/>
  	  <arg value="${stamp.dir}/bin/api-${apilevel}/stamp.android.jar"/>
  	  <arg value="${stamp.out.dir}/apktool-out"/>
    </java>

    <!-- Read required properties. -->
    <prop-default property="stamp.backend" default="chord"
		  description="backend to use for analyzing the app [chord,solvergen]"/>
    <prop-default property="missing.models" default="false"
		  description="whether or not to run the missing models analysis"/>
    <require-prop property="stamp.analyses.pre"
		  description="Chord analyses that will set up the initial facts for later stages"/>
    <require-prop property="stamp.analyses.post"
		  description="Chord analyses that will prepare the output relations"/>
    <prop-default property="stamp.printrels" default=""
		  description="relations to print out after the analysis finishes"/>
    <prop-default property="stamp.print.allclasses" default="true"
		  description="whether to dump out all processed jimple files"/>
	<prop-default property="stamp.timeout" default="86400000"
	      description="time out"/>

	<condition property="stamp.all.reports.default" else="false">
	  <equals arg1="${stamp.input.type}" arg2="src"/>
	</condition>
    <prop-default property="stamp.all.reports" default="${stamp.all.reports.default}"
	      description="whether to generate all reports or just final flows"/>

    <!-- Update the post analyses if needed. -->
    <if>
      <equals arg1="${missing.models}" arg2="true"/>
      <then>
	<property name="stamp.analyses.missing" value="cfl-init-dlog,cfl-annot-dlog,cfl-stub-dlog,cfl-normal-pt-dlog,cfl-taint-dlog,jcflsolver,"/>
      </then>
      <else>
	<property name="stamp.analyses.missing" value=""/>
      </else>
    </if>

    <!-- Prepare the selected analysis backend. -->
    <runtarget target="-prepare-backend-${stamp.backend}"/>
    <require-prop property="stamp.analyses.main"
		  description="backend-specific analyses to run -- should be declared in -prepare-backend-[backend]"/>
    <require-ref refid="stamp.analyses.main.sysprops"
		 description="backend-specific system properties to pass to Chord -- should be declared in -prepare-backend-[backend]"/>

    <!-- Configure remaining Chord settings. -->
    <property name="stamp.analyses"
	      value="${stamp.analyses.pre},${stamp.analyses.main},${stamp.analyses.missing}${stamp.analyses.post}"/>

    <echo message="HERE:${stamp.analyses}"/>

    <!-- Run petablox. -->
    <java classname="petablox.project.Main" 
		  maxmemory="${stamp.maxheap}"
		  fork="true" 
		  failonerror="true">
      <jvmarg value="-ea"/>
      <sysproperty key="petablox.scope.kind" value="rta"/>
      <sysproperty key="petablox.verbose" value="1"/>
      <sysproperty key="petablox.analyze.android" value="true"/>
      <sysproperty key="petablox.main.dir" value="${petablox.dir}"/>
      <sysproperty key="petablox.classic" value="true"/>
      <sysproperty key="petablox.work.dir" file="${stamp.out.dir}"/>
      <sysproperty key="petablox.main.class" value="edu.stanford.stamp.harness.Main"/>
      <sysproperty key="petablox.class.path" path="${apk}:${driver.dir}"/>
      <sysproperty key="petablox.java.analysis.path" path="${petablox.dir}/petablox.jar:${stamp.dir}/scanner/stamp.scanner.jar"/>
      <sysproperty key="petablox.dlog.analysis.path" path="${petablox.dir}/petablox.jar"/>
      <sysproperty key="petablox.ctxt.kind" value="cs"/>
      <sysproperty key="petablox.inst.ctxt.kind" value="cs"/>
      <sysproperty key="petablox.stat.ctxt.kind" value="cs"/>
      <sysproperty key="petablox.kcfa.k" value="2"/>
      <sysproperty key="petablox.run.analyses" value="cipa-0cfa-dlog,inject-annot,base-java,annot-java,contexts-java,context-label-java,pre-dlog,typefilter-dlog,pt-dlog,taint-lim-dlog,post-dlog"/>
      <sysproperty key="petablox.std.scope.exclude" value=""/>
      <sysproperty key="petablox.ext.scope.exclude" value=""/>
      <sysproperty key="petablox.std.check.exclude" value=""/>
      <sysproperty key="petablox.ext.check.exclude" value=""/>
      <sysproperty key="petablox.print.rels" value="${stamp.printrels}"/>
      <sysproperty key="petablox.max.heap" value="${chord.max.heap}"/>
      <sysproperty key="petablox.bddbddb.max.heap" value="${chord.bddbddb.max.heap}"/>
      <sysproperty key="stamp.dir" value="${stamp.dir}"/>
      <sysproperty key="stamp.out.dir" value="${stamp.out.dir}"/>
      <sysproperty key="stamp.input.type" value="${stamp.input.type}"/>
      <sysproperty key="stamp.android.jar" value="${stamp.dir}/bin/api-${apilevel}/stamp.android.jar"/>
      <sysproperty key="stamp.framework.dir" value="${stamp.dir}/models/api-${apilevel}"/>
      <sysproperty key="stamp.icdf" value="${stamp.icdf}"/>
      <sysproperty key="stamp.droidrecord.logfile.template" value="${stamp.droidrecord.logfile.template}"/>
      <sysproperty key="stamp.droidrecord.logfile.bin" value="${stamp.droidrecord.logfile.bin}"/>
      <sysproperty key="stamp.print.allclasses" value="${stamp.print.allclasses}"/>
      <sysproperty key="stamp.timeout" value="${stamp.timeout}"/>
      <syspropertyset refid="stamp.analyses.main.sysprops"/>
    <classpath>
		  <!--pathelement location="/local/mysoot/soot-github/lib/soot-develop.jar"/-->
		  <pathelement location="${stamp.dir}/lib/commons-lang3-3.1.jar"/>
      <pathelement location="${petablox.dir}/petablox.jar"/>     
      <pathelement location="${stamp.dir}/lib/soot.jar"/>        <!-- PRT remove this -->
      <pathelement location="${stamp.dir}/lib/automaton.jar"/>
    	<pathelement location="${stamp.dir}/lib/droidrecord_reader.jar"/>
    </classpath>
    </java>

  </target>

</project>
